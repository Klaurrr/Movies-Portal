{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usach\\\\Desktop\\\\Diplom\\\\diplom\\\\src\\\\components\\\\ShowList\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\nimport ShowItem from \"./components/ShowItem\";\nimport { Dropdown } from 'react-bootstrap';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowList = _ref => {\n  _s();\n\n  let {\n    list\n  } = _ref;\n  const [genres, setGenres] = useLocalStorage(\"genres\", 'Drama');\n  const tempGenres = list.map(show => show.genres); // Удаляю дубликаты\n\n  let arrGenres = tempGenres.flat(Infinity).filter((item, index) => tempGenres.flat(Infinity).indexOf(item) === index); // console.log(list)\n\n  const showFilter = list.filter(show => show.genres[0] === genres || show.genres[1] === genres || show.genres[2] === genres);\n  const showOutFilter = showFilter.map(show => /*#__PURE__*/_jsxDEV(ShowItem, {\n    item: show\n  }, show.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 62\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-wrapp\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-title\",\n          children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u0430\\u044F \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\\xA0\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            id: \"dropdown-basic\",\n            className: \"btn-castom\",\n            children: genres.toLowerCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: arrGenres.sort().map((item, idx) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setGenres(item),\n              children: item\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), showOutFilter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ShowList, \"KXrIVhQbCebsAOjtTov3TQ2fRvA=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ShowList;\nexport default ShowList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowList\");","map":{"version":3,"sources":["C:/Users/usach/Desktop/Diplom/diplom/src/components/ShowList/index.tsx"],"names":["React","useLocalStorage","ShowItem","Dropdown","ShowList","list","genres","setGenres","tempGenres","map","show","arrGenres","flat","Infinity","filter","item","index","indexOf","showFilter","showOutFilter","id","toLowerCase","sort","idx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,OAAO,cAAP;;;AAWA,MAAMC,QAAmC,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAEzD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,eAAe,CAAC,QAAD,EAAW,OAAX,CAA3C;AAEA,QAAMO,UAAqB,GAAGH,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAuBA,IAAI,CAACJ,MAArC,CAA9B,CAJyD,CAKzD;;AACA,MAAIK,SAAS,GAAGH,UAAU,CAACI,IAAX,CAAgBC,QAAhB,EAA0BC,MAA1B,CAAiC,CAACC,IAAD,EAAOC,KAAP,KAAiBR,UAAU,CAACI,IAAX,CAAgBC,QAAhB,EAA0BI,OAA1B,CAAkCF,IAAlC,MAA4CC,KAA9F,CAAhB,CANyD,CAQzD;;AAEA,QAAME,UAAU,GAAGb,IAAI,CAACS,MAAL,CAAaJ,IAAD,IAC5BA,IAAI,CAACJ,MAAL,CAAY,CAAZ,MAAmBA,MAApB,IAAgCI,IAAI,CAACJ,MAAL,CAAY,CAAZ,MAAmBA,MAAnD,IACAI,IAAI,CAACJ,MAAL,CAAY,CAAZ,MAAmBA,MAFF,CAAnB;AAKA,QAAMa,aAAa,GAAGD,UAAU,CAACT,GAAX,CAAgBC,IAAD,iBAAuB,QAAC,QAAD;AAAwB,IAAA,IAAI,EAAEA;AAA9B,KAAeA,IAAI,CAACU,EAApB;AAAA;AAAA;AAAA;AAAA,UAAtC,CAAtB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,QAAD;AAAA,kCACC,QAAC,QAAD,CAAU,MAAV;AAAiB,YAAA,EAAE,EAAC,gBAApB;AAAqC,YAAA,SAAS,EAAC,YAA/C;AAAA,sBACEd,MAAM,CAACe,WAAP;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC,QAAC,QAAD,CAAU,IAAV;AAAA,sBACEV,SAAS,CAACW,IAAV,GAAiBb,GAAjB,CAAqB,CAACM,IAAD,EAAOQ,GAAP,kBACrB,QAAC,QAAD,CAAU,IAAV;AAAyB,cAAA,OAAO,EAAE,MAAMhB,SAAS,CAACQ,IAAD,CAAjD;AAAA,wBAA0DA;AAA1D,eAAoBQ,GAApB;AAAA;AAAA;AAAA;AAAA,oBADA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAcEJ,aAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CArCD;;GAAMf,Q;UAEuBH,e;;;KAFvBG,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport useLocalStorage from \"hooks/useLocalStorage\";\r\nimport ShowItem from \"./components/ShowItem\";\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { IShowDetail } from \"types/IShowDetail\";\r\nimport './style.scss'\r\n\r\ninterface IShowListParams {\r\n\tlist: IShowDetail[];\r\n}\r\n// тестирование типизации\r\n// Элемент массива (строка или массив строк)\r\ntype ArrayElement = string[] | undefined;\r\n// Исходный массив\r\ntype TestArray = ArrayElement[] | undefined;\r\n\r\nconst ShowList: React.FC<IShowListParams> = ({ list }) => {\r\n\t\r\n\tconst [genres, setGenres] = useLocalStorage(\"genres\", 'Drama');\r\n\r\n\tconst tempGenres: TestArray = list.map((show: IShowDetail) => show.genres)\r\n\t// Удаляю дубликаты\r\n\tlet arrGenres = tempGenres.flat(Infinity).filter((item, index) => tempGenres.flat(Infinity).indexOf(item) === index);\r\n\t\r\n\t// console.log(list)\r\n\r\n\tconst showFilter = list.filter((show: IShowDetail) => \r\n\t\t((show.genres[0] === genres) || (show.genres[1] === genres) || \r\n\t\t(show.genres[2] === genres)) \r\n\t\t)\r\n\t\t\r\n\tconst showOutFilter = showFilter.map((show: IShowDetail) => <ShowItem key={show.id} item={show} />)\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"category-wrapp\">\r\n\t\t\t\t\t<div className=\"category-title\">Выбранная категория:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t<Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-castom\">\r\n\t\t\t\t\t\t\t{genres.toLowerCase()}\r\n\t\t\t\t\t\t</Dropdown.Toggle>\r\n\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t{arrGenres.sort().map((item, idx) =>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item key={idx} onClick={() => setGenres(item)}>{item}</Dropdown.Item>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</div>\r\n\t\t\t\t{showOutFilter}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ShowList"]},"metadata":{},"sourceType":"module"}