{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usach\\\\Desktop\\\\Diplom\\\\diplom\\\\src\\\\pages\\\\MainPage\\\\MainPageInfo\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadMain } from \"store/MainPage/actions\";\nimport { selectFilms } from \"store/MainPage/selectors\";\nimport MainPage from \"..\";\nimport prepareCountry from \"utils/prepareCountry\";\nimport prepareGenre from 'utils/prepareGenre';\nimport prepareImage from 'utils/prepareImage';\nimport prepareDate from 'utils/prepareDate';\nimport { routeMain as routeFilmDetail } from 'pages/FilmDetail';\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPageInfo = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const filmsArray = useSelector(selectFilms);\n  useEffect(() => {\n    dispatch(loadMain());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filmsArray.length > 0 ? filmsArray.map(film => {\n      var _film$show$image, _film$show$network, _film$show$network$co, _film$show$genres;\n\n      /*#__PURE__*/\n      _jsxDEV(MainPage, {\n        id: film.show.id.toString(),\n        img: (_film$show$image = film.show.image) === null || _film$show$image === void 0 ? void 0 : _film$show$image.medium,\n        name: film.show.name,\n        premiered: film.show.premiered,\n        country: (_film$show$network = film.show.network) === null || _film$show$network === void 0 ? void 0 : (_film$show$network$co = _film$show$network.country) === null || _film$show$network$co === void 0 ? void 0 : _film$show$network$co.name,\n        genre: (_film$show$genres = film.show.genres) === null || _film$show$genres === void 0 ? void 0 : _film$show$genres.join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u043F\\u0443\\u0441\\u0442\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainPageInfo, \"+1wfJWYcEOdC4UaUdq9GgGus2a4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainPageInfo;\nexport default MainPageInfo;\n{\n  /* <NavLink className='filmsMain' to={routeFilmDetail(film.show.id.toString())}>\r\n                                 <img className=\"img\" alt=\"image\" src={prepareImage(film.show.image?.medium)}/>\r\n                                 <div> {film.show.name} </div>\r\n                                 <div> {prepareDate(film.show.premiered)} ({prepareCountry(film.show.network?.country?.name)}) </div>\r\n                                 <div> {prepareGenre(film.show.genres?.join(', '))} </div>\r\n                             </NavLink>  */\n} // <NavLink className='filmsMain' to={routeFilmDetail(film.show.id.toString())}>\n//     <img className=\"img\" alt=\"image\" src={prepareImage(film.show.image?.medium)} />\n//     <div> {film.show.name} </div>\n//     <div> {prepareDate(film.show.premiered)} ({prepareCountry(film.show.network?.country?.name)}) </div>\n//     <div> {prepareGenre(film.show.genres?.join(', '))} </div>\n// </NavLink>\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageInfo\");","map":{"version":3,"sources":["C:/Users/usach/Desktop/Diplom/diplom/src/pages/MainPage/MainPageInfo/index.js"],"names":["React","useEffect","useDispatch","useSelector","loadMain","selectFilms","MainPage","prepareCountry","prepareGenre","prepareImage","prepareDate","routeMain","routeFilmDetail","NavLink","MainPageInfo","props","dispatch","filmsArray","length","map","film","show","id","toString","image","medium","name","premiered","network","country","genres","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,QAAP,MAAqB,IAArB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,SAAS,IAAIC,eAAtB,QAA6C,kBAA7C;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,UAAU,GAAGd,WAAW,CAACE,WAAD,CAA9B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,CAACY,QAAD,CAFM,CAAT;AAIA,sBACI;AAAA,cACKC,UAAU,CAACC,MAAX,GAAoB,CAApB,GACGD,UAAU,CAACE,GAAX,CAAgBC,IAAD,IAAU;AAAA;;AACrB;AAAA,cAAC,QAAD;AACI,QAAA,EAAE,EAAEA,IAAI,CAACC,IAAL,CAAUC,EAAV,CAAaC,QAAb,EADR;AAEI,QAAA,GAAG,sBAAEH,IAAI,CAACC,IAAL,CAAUG,KAAZ,qDAAE,iBAAiBC,MAF1B;AAGI,QAAA,IAAI,EAAEL,IAAI,CAACC,IAAL,CAAUK,IAHpB;AAII,QAAA,SAAS,EAAEN,IAAI,CAACC,IAAL,CAAUM,SAJzB;AAKI,QAAA,OAAO,wBAAEP,IAAI,CAACC,IAAL,CAAUO,OAAZ,gFAAE,mBAAmBC,OAArB,0DAAE,sBAA4BH,IALzC;AAMI,QAAA,KAAK,uBAAEN,IAAI,CAACC,IAAL,CAAUS,MAAZ,sDAAE,kBAAkBC,IAAlB,CAAuB,IAAvB;AANX;AAAA;AAAA;AAAA;AAAA;AAQH,KATD,CADH,gBAWG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAzBD;;GAAMjB,Y;UACeZ,W,EACEC,W;;;KAFjBW,Y;AA2BN,eAAeA,YAAf;AACA;AAAC;AACD;AACA;AACA;AACA;AACA;AAA2C,C,CAI3C;AACoB;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadMain } from \"store/MainPage/actions\";\r\nimport { selectFilms } from \"store/MainPage/selectors\";\r\nimport MainPage from \"..\";\r\nimport prepareCountry from \"utils/prepareCountry\";\r\nimport prepareGenre from 'utils/prepareGenre';\r\nimport prepareImage from 'utils/prepareImage';\r\nimport prepareDate from 'utils/prepareDate';\r\nimport { routeMain as routeFilmDetail } from 'pages/FilmDetail';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MainPageInfo = (props) => {\r\n    const dispatch = useDispatch();\r\n    const filmsArray = useSelector(selectFilms);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadMain());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            {filmsArray.length > 0 ? (\r\n                filmsArray.map((film) => {\r\n                    <MainPage\r\n                        id={film.show.id.toString()}\r\n                        img={film.show.image?.medium}\r\n                        name={film.show.name}\r\n                        premiered={film.show.premiered}\r\n                        country={film.show.network?.country?.name}\r\n                        genre={film.show.genres?.join(', ')}\r\n                    />\r\n                })\r\n            ) : <div>пусто</div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPageInfo;\r\n{/* <NavLink className='filmsMain' to={routeFilmDetail(film.show.id.toString())}>\r\n                                <img className=\"img\" alt=\"image\" src={prepareImage(film.show.image?.medium)}/>\r\n                                <div> {film.show.name} </div>\r\n                                <div> {prepareDate(film.show.premiered)} ({prepareCountry(film.show.network?.country?.name)}) </div>\r\n                                <div> {prepareGenre(film.show.genres?.join(', '))} </div>\r\n                            </NavLink>  */}\r\n\r\n\r\n\r\n// <NavLink className='filmsMain' to={routeFilmDetail(film.show.id.toString())}>\r\n                    //     <img className=\"img\" alt=\"image\" src={prepareImage(film.show.image?.medium)} />\r\n                    //     <div> {film.show.name} </div>\r\n                    //     <div> {prepareDate(film.show.premiered)} ({prepareCountry(film.show.network?.country?.name)}) </div>\r\n                    //     <div> {prepareGenre(film.show.genres?.join(', '))} </div>\r\n                    // </NavLink>"]},"metadata":{},"sourceType":"module"}