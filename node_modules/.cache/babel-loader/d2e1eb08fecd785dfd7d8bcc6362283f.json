{"ast":null,"code":"const initialState = {\n  list: []\n};\n\nconst showReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'show/setShow':\n      return { ...state,\n        list: [...action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default showReducer;","map":{"version":3,"sources":["C:/Users/usach/Desktop/Diplom/diplom/src/store/show/reducer.ts"],"names":["initialState","list","showReducer","state","action","type","payload"],"mappings":"AAIA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAArB;;AAIA,MAAMC,WAAW,GAAG,YAAuD;AAAA,MAAtDC,KAAsD,uEAArCH,YAAqC;AAAA,MAAvBI,MAAuB;;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,cAAL;AACC,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,IAAI,EAAE,CAAC,GAAGG,MAAM,CAACE,OAAX;AAAjB,OAAP;;AACD;AACC,aAAOH,KAAP;AAJF;AAMA,CAPD;;AASA,eAAeD,WAAf","sourcesContent":["import { AnyAction } from \"redux\"\r\n\r\nimport { IStore } from \"./types\"\r\n\r\nconst initialState = {\r\n\tlist: [],\r\n}\r\n\r\nconst showReducer = (state : IStore = initialState, action : AnyAction) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'show/setShow' :\r\n\t\t\treturn {...state, list: [...action.payload]}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default showReducer;"]},"metadata":{},"sourceType":"module"}